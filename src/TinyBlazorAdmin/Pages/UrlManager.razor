@page "/urlmanager"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.Grids
@using Cloud5mins.AzShortener
@inject HttpClient Http

<PageTitle>Url Manager</PageTitle>

<h1>Url Manager</h1>

@if (urls.UrlList == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <SfGrid DataSource="@urls.UrlList" id="grdUrls" AllowPaging="true" AllowSorting="true" AllowFiltering="true" >
        <GridPageSettings PageSize="15"></GridPageSettings>
        <GridColumns>
                @* <GridColumn Width="80">
                    <Template>
                        @{
                            var url = (context as ShortUrlEntity);
                            <button type="button" class="btn btn-outline-primary btn-sm" @onclick="@(() => CopyToClipboardAsync(url.ShortUrl))">Copy</button>
                        }
                    </Template>
                </GridColumn>
                <GridColumn HeaderText="Schedule(s)">
                    <Template>
                        @{
                            var url = (context as ShortUrlEntity);
                            if(url.Schedules != null){
                                <span>@url.Schedules.Count</span>
                            }
                            else
                            {
                                <span>0</span>
                            };
                        }
                    </Template>
                </GridColumn> *@
                <GridColumn Field=@nameof(ShortUrlEntity.RowKey) HeaderText="Vanity">
                    <Template>
                        @{
                            var url = (context as ShortUrlEntity);
                            <a href="https://@url.ShortUrl" target="blank">@url.RowKey</a>
                        }
                    </Template>
                </GridColumn>
                <GridColumn Field=@nameof(ShortUrlEntity.Title) HeaderText="Title" ></GridColumn>
                <GridColumn Field=@nameof(ShortUrlEntity.Url) HeaderText="Url" ></GridColumn>
                <GridColumn Field=@nameof(ShortUrlEntity.Clicks) HeaderText="Clicks" >
                    <Template>
                        @{
                            var url = (context as ShortUrlEntity);
                            <span>@url.Clicks</span>   
                            @* <button type="button" class="btn btn-outline-primary btn-sm" @onclick="@(() => NavigateToStats(url.RowKey))">ðŸ“Š</button> *@
                        }
                    </Template>
                </GridColumn>
                @* <GridColumn Width="70">
                    <Template>
                        @{
                            var url = (context as ShortUrlEntity);
                            <button type="button" class="btn btn-outline-primary btn-sm" @onclick="@(() => EditShortUrl(url))">Edit</button>
                        }
                    </Template>
                </GridColumn> *@
                @* <GridColumn Width="70">
                    <Template>
                        @{
                            var url = (context as ShortUrlEntity);
                            <button type="button" class="btn btn-outline-primary btn-sm" @onclick="@(() => ArchiveShortUrl(url))">Archive</button>
                        }
                    </Template>
                </GridColumn> *@
            </GridColumns>
    </SfGrid>
}

@code {
    private ListResponse urls = new ListResponse();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            urls = await Http.GetFromJsonAsync<ListResponse>("/api/UrlList") ?? new ListResponse();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }
}
